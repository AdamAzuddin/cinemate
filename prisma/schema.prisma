// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @map("_id") @default(auto()) @db.ObjectId
  name String
  image String?
  email String? @unique
  emailVerified DateTime?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  favouriteIds String[] @db.ObjectId
  sessions Session[]
  accounts Account[]
}

model Account {
  id String @id @map("_id") @default(auto()) @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_At Int?
  token_type String?
  scope String?
  id_token String @db.String
  session_state String 
  
  expires DateTime

  // set relationship between session and user model
  user User @relation(fields: [userId], references: [id],onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id String @id @map("_id") @default(auto()) @db.ObjectId
  sessionToken String @unique
  userId String @db.ObjectId
  expires DateTime

  // set relationship between session and user model
  user User @relation(fields: [userId], references: [id],onDelete: Cascade)
}

model VerificationToken {
  id String @id @map("_id") @default(auto()) @db.ObjectId
  identifier String
  token String @unique
  expires DateTime

  @@unique([identifier,token])
}

model Movie {
  id String @id @map("_id") @default(auto()) @db.ObjectId
  title String
  description String
  thumbnailUrl String
  genre String
  duration String
}


